name: CI
on:
  push:
    branches:
    - master
    tags:
    - "v*"
  pull_request:

jobs:
  examples:
    runs-on: ${{ matrix.OS }}
    strategy:
      fail-fast: false
      matrix:
        OS: ["ubuntu-latest", "windows-latest"]
    steps:
    - name: Don't convert LF to CRLF during checkout
      if: runner.os == 'Windows'
      run: |
        git config --global core.autocrlf false
        git config --global core.eol lf
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
        submodules: true
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.6
    - name: Install python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r examples/requirements.txt --no-dependencies
    - uses: coursier/cache-action@v5
      with:
        extraFiles: "[\".github/scripts/*.sh\", \".github/workflows/ci.yml\", \"scripts/*.sh\", \"scripts/*.sc\", \"examples/*.ipynb\"]"
        extraKey: "validate-examples"
    - uses: laughedelic/coursier-setup@v1
      with:
        jvm: 8
        apps: sbt-launcher
    - run: scripts/setup-and-validate-examples.sh
      shell: bash

  test:
    runs-on: ${{ matrix.OS }}
    strategy:
      fail-fast: false
      matrix:
        JDK: [8]
        OS: [ubuntu-latest]
        SCALA: [2.12.11, 2.12.12, 2.13.2, 2.13.3]
        include:
          - JDK: 8
            SCALA: 2.13.3
            OS: windows-latest
          - JDK: 11
            SCALA: 2.12.12
            OS: ubuntu-latest
    steps:
    - name: Don't convert LF to CRLF during checkout
      if: runner.os == 'Windows'
      run: |
        git config --global core.autocrlf false
        git config --global core.eol lf
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
        submodules: true
    - uses: coursier/cache-action@v5
      with:
        extraFiles: "[\".github/scripts/*.sh\", \".github/workflows/ci.yml\", \"scripts/*.sh\", \"scripts/*.sc\", \"examples/*.ipynb\"]"
        extraKey: test-${{ matrix.SCALA }}
    - uses: laughedelic/coursier-setup@v1
      with:
        jvm: ${{ matrix.JDK }}
        apps: sbt-launcher
    - run: sbt "++$SCALA!" "show version" test mimaReportBinaryIssues
      shell: bash
      env:
        SCALA: ${{ matrix.SCALA }}

  website:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
        submodules: true
    - uses: coursier/cache-action@v5
      with:
        extraFiles: "[\".github/scripts/*.sh\", \".github/workflows/ci.yml\", \"scripts/*.sh\", \"scripts/*.sc\", \"examples/*.ipynb\"]"
        extraKey: "validate-website"
    - uses: laughedelic/coursier-setup@v1
      with:
        jvm: 8
        apps: sbt-launcher ammonite cs
    - run: amm scripts/site.sc --publishLocal true
      shell: bash

  release:
    needs: [examples, test, website]
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
        submodules: true
    - uses: coursier/cache-action@v5
      with:
        extraFiles: "[\".github/scripts/*.sh\", \".github/workflows/ci.yml\", \"scripts/*.sh\", \"scripts/*.sc\", \"examples/*.ipynb\"]"
        extraKey: "release"
    - uses: laughedelic/coursier-setup@v1
      with:
        jvm: 8
        apps: sbt-launcher
    - run: sbt ci-release
      shell: bash
      env:
        PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
        PGP_SECRET: ${{ secrets.PGP_SECRET }}
        SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
        SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}

  upload-launcher:
    needs: release
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
        submodules: true
    - uses: coursier/cache-action@v5
      with:
        extraFiles: "[\".github/scripts/*.sh\", \".github/workflows/ci.yml\", \"scripts/*.sh\", \"scripts/*.sc\", \"examples/*.ipynb\"]"
        extraKey: "upload-launcher"
    - uses: laughedelic/coursier-setup@v1
      with:
        jvm: 8
        apps: sbt-launcher
    - run: scripts/upload-launcher.sh
      if: startsWith(github.ref, 'refs/tags/v')
      shell: bash

  update-docker-images:
    needs: release
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
        submodules: true
    - uses: coursier/cache-action@v5
      with:
        extraFiles: "[\".github/scripts/*.sh\", \".github/workflows/ci.yml\", \"scripts/*.sh\", \"scripts/*.sc\", \"examples/*.ipynb\"]"
        extraKey: "update-docker-images"
    - uses: laughedelic/coursier-setup@v1
      with:
        jvm: 8
        apps: sbt-launcher
    - run: scripts/update-docker-images.sh
      shell: bash
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

  update-website:
    needs: [upload-launcher, update-docker-images]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
        submodules: true
    - uses: coursier/cache-action@v5
      with:
        extraFiles: "[\".github/scripts/*.sh\", \".github/workflows/ci.yml\", \"scripts/*.sh\", \"scripts/*.sc\", \"examples/*.ipynb\"]"
        extraKey: "update-docker-images"
    - uses: laughedelic/coursier-setup@v1
      with:
        jvm: 8
        apps: sbt-launcher ammonite cs
    - run: |
        amm scripts/site.sc --publishLocal true --npmInstall true --yarnRunBuild true
        scripts/website/versioned-docs.sh --update
      if: startsWith(github.ref, 'refs/tags/v')
      shell: bash
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
        WEBSITE_DIR: docs/website
        VERSIONED_DOCS_REPO: almond-sh/versioned-docs
    - run: |
        scripts/website/versioned-docs.sh
        amm scripts/site.sc --publishLocal true --npmInstall true --yarnRunBuild true --relativize true
        scripts/website/push-website.sh
      shell: bash
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
        WEBSITE_DIR: docs/website
        REPO: almond-sh/almond
        VERSIONED_DOCS_REPO: almond-sh/versioned-docs
